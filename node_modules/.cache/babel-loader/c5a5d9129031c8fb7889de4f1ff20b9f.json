{"ast":null,"code":"var _jsxFileName = \"/Users/mathis/Documents/Code/ReactJs/my-app/src/Components/ListTables.js\",\n    _s = $RefreshSig$();\n\nimport { nanoid } from 'nanoid';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { AppContext } from '../Context/AppContext';\nimport AddOrder from './AddOrder';\nimport Alert from './Notification';\nimport Table from './Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ListTables = () => {\n  _s();\n\n  const {\n    tables\n  } = useContext(AppContext);\n  const {\n    categories\n  } = useContext(AppContext);\n  const {\n    dispatch\n  } = useContext(AppContext);\n  const [isOrdering, setIsOrdering] = useState(false);\n  const [tableNumber, setTableNumber] = useState(0);\n  const [selectedTable, setSelectedTable] = useState({});\n  const [isNotificationOpen, setNotification] = useState(false);\n  useEffect(() => {\n    setSelectedTable(tables[tableNumber - 1]);\n  }, [tables, tableNumber]);\n\n  const handleSubmit = table => {\n    setNotification(true);\n  };\n\n  const handleClick = number => {\n    setTableNumber(number);\n    setIsOrdering(true);\n    setSelectedTable(tables[number - 1]);\n  };\n\n  const handleChange = (product, price) => {\n    const order = {\n      id: nanoid(),\n      product: product,\n      price: price,\n      quantity: 1\n    };\n    dispatch({\n      type: 'ADD_PRODUCT',\n      tableNumber: tableNumber,\n      order: order\n    });\n  };\n\n  const handleDeleteOrder = (id, table) => {\n    dispatch({\n      type: 'DELETE_PRODUCT',\n      tableNumber: table,\n      id: id\n    });\n  };\n\n  const handleGoBack = () => {\n    setIsOrdering(false);\n    dispatch({\n      type: 'RESET_ORDER',\n      tableNumber: tableNumber\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !isOrdering ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-list\",\n      children: tables.map(table => /*#__PURE__*/_jsxDEV(Table, {\n        table: table,\n        handleClick: handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(AddOrder, {\n        table: selectedTable,\n        categories: categories,\n        handleGoBack: handleGoBack,\n        handleChange: handleChange,\n        handleDeleteOrder: handleDeleteOrder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        handleSubmit: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ListTables, \"g5HwoWfx8qHvoi3wgYFraf0C9yI=\");\n\n_c = ListTables;\nexport default ListTables;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListTables\");","map":{"version":3,"names":["nanoid","React","useContext","useEffect","useState","AppContext","AddOrder","Alert","Table","ListTables","tables","categories","dispatch","isOrdering","setIsOrdering","tableNumber","setTableNumber","selectedTable","setSelectedTable","isNotificationOpen","setNotification","handleSubmit","table","handleClick","number","handleChange","product","price","order","id","quantity","type","handleDeleteOrder","handleGoBack","map"],"sources":["/Users/mathis/Documents/Code/ReactJs/my-app/src/Components/ListTables.js"],"sourcesContent":["import { nanoid } from 'nanoid';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { AppContext } from '../Context/AppContext';\nimport AddOrder from './AddOrder';\nimport Alert from './Notification';\nimport Table from './Table';\n\nconst ListTables = () => {\n\tconst { tables } = useContext(AppContext);\n\tconst { categories } = useContext(AppContext);\n\tconst { dispatch } = useContext(AppContext);\n\n\tconst [isOrdering, setIsOrdering] = useState(false);\n\tconst [tableNumber, setTableNumber] = useState(0);\n\tconst [selectedTable, setSelectedTable] = useState({});\n\tconst [isNotificationOpen, setNotification] = useState(false);\n\n\tuseEffect(() => {\n\t\tsetSelectedTable(tables[tableNumber - 1]);\n\t}, [tables, tableNumber]);\n\n\tconst handleSubmit = (table) => {\n\t\tsetNotification(true);\n\t};\n\n\tconst handleClick = (number) => {\n\t\tsetTableNumber(number);\n\t\tsetIsOrdering(true);\n\t\tsetSelectedTable(tables[number - 1]);\n\t};\n\n\tconst handleChange = (product, price) => {\n\t\tconst order = {\n\t\t\tid: nanoid(),\n\t\t\tproduct: product,\n\t\t\tprice: price,\n\t\t\tquantity: 1,\n\t\t};\n\n\t\tdispatch({\n\t\t\ttype: 'ADD_PRODUCT',\n\t\t\ttableNumber: tableNumber,\n\t\t\torder: order,\n\t\t});\n\t};\n\n\tconst handleDeleteOrder = (id, table) => {\n\t\tdispatch({\n\t\t\ttype: 'DELETE_PRODUCT',\n\t\t\ttableNumber: table,\n\t\t\tid: id,\n\t\t});\n\t};\n\n\tconst handleGoBack = () => {\n\t\tsetIsOrdering(false);\n\n\t\tdispatch({\n\t\t\ttype: 'RESET_ORDER',\n\t\t\ttableNumber: tableNumber,\n\t\t});\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t{!isOrdering ? (\n\t\t\t\t<div className=\"table-list\">\n\t\t\t\t\t{tables.map((table) => (\n\t\t\t\t\t\t<Table table={table} handleClick={handleClick} />\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<AddOrder\n\t\t\t\t\t\ttable={selectedTable}\n\t\t\t\t\t\tcategories={categories}\n\t\t\t\t\t\thandleGoBack={handleGoBack}\n\t\t\t\t\t\thandleChange={handleChange}\n\t\t\t\t\t\thandleDeleteOrder={handleDeleteOrder}\n\t\t\t\t\t/>\n\t\t\t\t\t<Alert handleSubmit={handleSubmit} />\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default ListTables;\n"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EACxB,MAAM;IAAEC;EAAF,IAAaR,UAAU,CAACG,UAAD,CAA7B;EACA,MAAM;IAAEM;EAAF,IAAiBT,UAAU,CAACG,UAAD,CAAjC;EACA,MAAM;IAAEO;EAAF,IAAeV,UAAU,CAACG,UAAD,CAA/B;EAEA,MAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,KAAD,CAA5C;EACA,MAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,CAAD,CAA9C;EACA,MAAM,CAACa,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,EAAD,CAAlD;EACA,MAAM,CAACe,kBAAD,EAAqBC,eAArB,IAAwChB,QAAQ,CAAC,KAAD,CAAtD;EAEAD,SAAS,CAAC,MAAM;IACfe,gBAAgB,CAACR,MAAM,CAACK,WAAW,GAAG,CAAf,CAAP,CAAhB;EACA,CAFQ,EAEN,CAACL,MAAD,EAASK,WAAT,CAFM,CAAT;;EAIA,MAAMM,YAAY,GAAIC,KAAD,IAAW;IAC/BF,eAAe,CAAC,IAAD,CAAf;EACA,CAFD;;EAIA,MAAMG,WAAW,GAAIC,MAAD,IAAY;IAC/BR,cAAc,CAACQ,MAAD,CAAd;IACAV,aAAa,CAAC,IAAD,CAAb;IACAI,gBAAgB,CAACR,MAAM,CAACc,MAAM,GAAG,CAAV,CAAP,CAAhB;EACA,CAJD;;EAMA,MAAMC,YAAY,GAAG,CAACC,OAAD,EAAUC,KAAV,KAAoB;IACxC,MAAMC,KAAK,GAAG;MACbC,EAAE,EAAE7B,MAAM,EADG;MAEb0B,OAAO,EAAEA,OAFI;MAGbC,KAAK,EAAEA,KAHM;MAIbG,QAAQ,EAAE;IAJG,CAAd;IAOAlB,QAAQ,CAAC;MACRmB,IAAI,EAAE,aADE;MAERhB,WAAW,EAAEA,WAFL;MAGRa,KAAK,EAAEA;IAHC,CAAD,CAAR;EAKA,CAbD;;EAeA,MAAMI,iBAAiB,GAAG,CAACH,EAAD,EAAKP,KAAL,KAAe;IACxCV,QAAQ,CAAC;MACRmB,IAAI,EAAE,gBADE;MAERhB,WAAW,EAAEO,KAFL;MAGRO,EAAE,EAAEA;IAHI,CAAD,CAAR;EAKA,CAND;;EAQA,MAAMI,YAAY,GAAG,MAAM;IAC1BnB,aAAa,CAAC,KAAD,CAAb;IAEAF,QAAQ,CAAC;MACRmB,IAAI,EAAE,aADE;MAERhB,WAAW,EAAEA;IAFL,CAAD,CAAR;EAIA,CAPD;;EASA,oBACC;IAAA,UACE,CAACF,UAAD,gBACA;MAAK,SAAS,EAAC,YAAf;MAAA,UACEH,MAAM,CAACwB,GAAP,CAAYZ,KAAD,iBACX,QAAC,KAAD;QAAO,KAAK,EAAEA,KAAd;QAAqB,WAAW,EAAEC;MAAlC;QAAA;QAAA;QAAA;MAAA,QADA;IADF;MAAA;MAAA;MAAA;IAAA,QADA,gBAOA;MAAA,wBACC,QAAC,QAAD;QACC,KAAK,EAAEN,aADR;QAEC,UAAU,EAAEN,UAFb;QAGC,YAAY,EAAEsB,YAHf;QAIC,YAAY,EAAER,YAJf;QAKC,iBAAiB,EAAEO;MALpB;QAAA;QAAA;QAAA;MAAA,QADD,eAQC,QAAC,KAAD;QAAO,YAAY,EAAEX;MAArB;QAAA;QAAA;QAAA;MAAA,QARD;IAAA;EARF;IAAA;IAAA;IAAA;EAAA,QADD;AAsBA,CA9ED;;GAAMZ,U;;KAAAA,U;AAgFN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}